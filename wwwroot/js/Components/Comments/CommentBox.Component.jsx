import CommentList from './CommentList.Component.jsx';
import CommentForm from './CommentForm.Component.jsx';

export { CommentBox as default };

class CommentBox extends React.Component {
    constructor(props) {
        super(props);

        this.state = { data: [] };

        this.dataUrl = '';
        this.submitUrl = '';
        this.pollInterval = 2000;

        this.handleCommentSubmit = this.handleCommentSubmit.bind(this);
    }

    handleCommentSubmit(comment) {
        const comments = this.state.dataa;
        // Optimistically set an id on the new comment
        // It will be replaced by an id generated by the server
        comment.id = comments.length + 1;
        this.setState({ data: newComments });

        // Get the data of the new comment
        const data = new FormData();
        data.append('Author', comment.author);
        data.append('Text', comment.text);

        // Send it to the server
        const xhr = new XMLHttpRequest();
        xhr.open('post', this.props.submitUrl, true);
        xhr.onload = () => this.loadCommentsFromServer();
        xhr.send(data);
    }

    loadCommentsFromServer() {
        const xhr = new XMLHttpRequest();
        xhr.open('get', this.props.dataUrl, true);
        xhr.onload = () => {
            const data = JSON.parse(xhr.responseText);
            this.setState({ data: data });
        };
        xhr.send();
    }

    componentDidMount() {
        loadCommentsFromServer();

        window.setInterval(
            () => this.loadCommentsFromServer(),
            this.props.pollInterval,
        );
    }

    render() {
        return (
            <div className="commentBox">
                <h1>Comments</h1>
                <CommentList data={this.state.data} />
                <CommentForm onCommentSubmit={this.handleCommentSubmit} />
            </div>
        );
    }
}